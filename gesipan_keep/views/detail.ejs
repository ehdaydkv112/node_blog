<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>

    <!-- 부트스트랩 -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-BmbxuPwQa2lc/FVzBcNJ7UAyJxM6wuqIj61tLrc4wSX0szH/Ev+nYRRuWlolflfl" crossorigin="anonymous" />

    <!-- j쿼리 -->
    <script src="https://code.jquery.com/jquery-3.5.1.js"
        integrity="sha256-QWo7LDvxbWT2tbbQ97B53yJnYU3WhH/C8ycbRAkjPDc=" crossorigin="anonymous"></script>

    <!-- 구글폰트 -->
    <link rel="preconnect" href="https://fonts.gstatic.com" />
    <link
        href="https://fonts.googleapis.com/css2?family=Black+Han+Sans&family=Noto+Serif+KR&family=Stylish&display=swap"
        rel="stylesheet" />

    <script src="https://cdn.socket.io/socket.io-3.0.1.min.js"></script>
    <script src="/api.js"></script>
    <!-- font-family: 'Black Han Sans', sans-serif; -->
    <!-- font-family: 'Noto Serif KR', serif; -->
    <!-- font-family: 'Stylish', sans-serif; -->

    <style>
        .alert-sparta {
            color: white;
            background-color: black;
            border-color: #ffcde7;
            height: 100px;
        }

        .alert-sparta .alert-link {
            color: #4900f3;
        }

        .logo_Btn:hover {
            transform: translateY(6px) rotate(1turn);
            transition: all 500ms ease-in-out;
        }

        .login_Btn:hover {
            cursor: pointer;
            color: black;
            background: white;
            border-radius: 4px;
            text-decoration: none;
            transform: scale(1.5);
            transition: transform 200ms ease-in-out;
        }
    </style>
</head>

<body>
    <div style="
        background-color: pink;
        margin-top: 20px;
        text-align: center;
        display: block;" id="nav">
        <button onclick="location.href='/home'" style="
          border: none;
          outline: none;
          background: none;
          font-size: 50px;
          color: white;
          font-family: 'Black Han Sans', sans-serif;
        " class="logo_Btn">
            Home
        </button>
    </div>
    <div id="top_alert" style="text-align:center;"> </div>
    <td></td>
    <div style="text-align: center; width: 800px; margin: auto" id="content_list">
        <div style="font-family: 'Black Han Sans', sans-serif"></div>
    </div>

    <div style="text-align: center; display: block; width: 500px; margin: auto">
        <div class="input-group mb-3">
            <input type="text" id="comment" class="form-control" placeholder="댓글 작성하기.."
                aria-label="Recipient's username" aria-describedby="button-addon2" />
            <button class="btn btn-info" type="button" id="button-addon2" onclick="getSelf()"
                style="font-family: 'Stylish', sans-serif">
                작성
            </button>

        </div>
    </div>

    <div id="comment_list" style="width: 800px; margin: auto"></div>

    <script>
        // 쿼리문 쓸 때 써야하는 것;
        const queryString = window.location.search;
        const urlParams = new URLSearchParams(queryString);
        const blogsId = urlParams.get("goodsId");

        $(document).ready(function () {
            get_fix_detail();
            get_comment_detail();
            get_show_fix_button();
            check_login();
        });

        // 소켓
        const socket = io.connect('/')

        socket.on('SAVE_REVIEW', function (data) {
            const { nickname, goodsId, goodsName, date } = data
            makeBuyNotification(nickname, goodsName, goodsId, date)
        })

        function postOrder(nickname, boardname) {
            socket.emit('SAVE', {
                nickname: nickname,
                goodsId: blogsId,
                goodsName: boardname
            })
        }

        function makeBuyNotification(targetNickname, goodsName, goodsId, date) {
            const messageHtml = `<span style="color:hotpink; font-family: 'Stylish', sans-serif;">${targetNickname}</span>
            <span style="font-family: 'Stylish', sans-serif;">님이 방금 <a href="/detail?goodsId=${goodsId}" class="alert-link">${goodsName}</a>에 새로운 글을 남겼어요! <br /><small>(${date})</small>
    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>`
            const alt = $('#customerAlert')
            if (alt.length) {
                alt.html(messageHtml)
            } else {
                const htmlTemp = `<div class="alert alert-sparta alert-dismissible show fade" role="alert" id="customerAlert">${messageHtml}</div>`
                $('#top_alert').append(htmlTemp)
            }
        }
        // 소켓

        let goods;
        let user;

        //로그인
        function loginNow() {
            window.location.href = "/"
        }

        function check_login() {
            token = localStorage.getItem("token");
            if (token == null) {
                let tempHtml = `<button onclick="loginNow()" class="login_Btn" id="login"
      style="border:none; outline:none; background:none; font-size:20px; color:black;; font-family: 'Black Han Sans', sans-serif; float:right;">로그인</button>`
                $('#nav').append(tempHtml)
            } else {
                let tempHtml = `<button onclick="logoutNow()" class="login_Btn" id="logut"
      style="border:none; outline:none; background:none; font-size:20px; color:black;; font-family: 'Black Han Sans', sans-serif; float:right;">로그아웃</button>`
                $('#nav').append(tempHtml)
            }
        }

        // 로그아웃
        function logoutNow() {
            localStorage.clear();
            window.location.href = "/home";
        }

        // getSelf(function (u) {
        //     user = u;
        //     console.log(user)
        // });

        //자동 시작 함수
        let check = 0;

        // 댓글 작성 로그인 확인
        function getSelf() {
            $.ajax({
                type: "GET",
                url: "/api/users/me",
                headers: {
                    authorization: `Bearer ${localStorage.getItem("token")}`,
                },
                success: function (response) {
                    // callback(response.user);
                    // console.log(response.user)
                    makeComment();
                },
                error: function (xhr, status, error) {
                    if (xhr.status == 401) {
                        alert("로그인이 필요한 기능입니다");
                    } else {
                        localStorage.clear();
                        console.log(status);
                        alert("너 왜 여기 서 뜨니");
                    }
                    window.location.href = "/";
                },
            });
        }

        // 게시글 보여주기
        function get_fix_detail() {
            $.ajax({
                type: "GET",
                url: `/api/blogs/${blogsId}`,
                data: {},
                success: function (response) {
                    let goodsDetail = response["detail"];
                    let content = goodsDetail["content"];
                    let nickname = goodsDetail["nickname"];
                    let name = goodsDetail["name"];
                    let goodsId = goodsDetail["goodsId"];
                    let img = goodsDetail["file_name"];

                    let tempHtml = `
                            <div id='${goodsId}'>
                                <hr>
                <p style="color:hotpink; font-family: 'Stylish', sans-serif; font-size:20px;">작성자 : ${nickname} </p>
                    <class style="font-family: 'Stylish', sans-serif; color:black; font-size:20px;">제목 : ${name}<button id="show_button" type="button" class="btn btn-info" style="font-family: 'Stylish', sans-serif; display:none; margin:auto;" onclick="location.href='/fix?goodsId=${goodsId}'">수정</button>
                                </p>
                                <hr>
                            <img src="${img}" style="width:500px;">
                                <pre>
                            <div style="font-size:25px; margin-top:50px; font-family: 'Noto Serif KR', serif;">${content}</div>
                            <div style="margin-top:25px;">
                                </pre>
                            </div>
                            <hr>
                            `;
                    $("#content_list").append(tempHtml);
                },
            });
        }

        // 자기 게시글일 때 댓글 수정 버튼 보이기
        function get_show_fix_button() {
            $.ajax({
                type: "POST",
                url: `/api/comment_fix_button/${blogsId}`,
                data: {
                    token: localStorage.getItem("token"),
                },
                //
                success: function (response) {
                    if (response == "O") {
                        document.getElementById("show_button").style.display = "block";
                    }
                },
            });
        }

        // 댓글 작성 - db로 보내기
        function makeComment() {
            let comment = $("#comment").val();
            $.ajax({
                type: "POST",
                url: `/api/comment_save/${blogsId}`,
                data: {
                    comment: comment,
                    token: localStorage.getItem("token"),
                },
                success: function (response) {
                    postOrder(response[0], response[1])
                },
            });
            alert("작성 완료!");
            window.location.reload();
        }

        //댓글 보여주기
        function get_comment_detail() {
            $.ajax({
                type: "GET",
                url: `/api/comment/${blogsId}`,
                data: {},
                success: function (response) {
                    let commentDetail = response["comment_detail"];
                    for (let i = 0; i < commentDetail.length; i++) {
                        let nickname = commentDetail[i]["nickname"];
                        let comment = commentDetail[i]["comment"];
                        let comment_Delete_Id = commentDetail[i]["comment_Delete_Id"];

                        let tempHtml = `
                <div class="alert alert-warning alert-dismissible fade show" role="alert" id=${comment_Delete_Id}>
                <strong style="font-family: 'Stylish', sans-serif; color:hotpink;">${nickname}</strong> <span style="font-family: 'Noto Serif KR', serif; color:black;">${comment}</span>

                <button class="login_Btn" type="button" id='${comment_Delete_Id}_bts' onclick="fix_comments('${comment_Delete_Id}', '${nickname}')" style=" font-family: 'Stylish', sans-serif; border:none; outline:none; background:none; float:right;">✏️</button>
                <button type="button" id='${comment_Delete_Id}' class="btn-close" data-bs-dismiss="alert" aria-label="Close" onclick="delete_comment('${comment_Delete_Id}', '${nickname}')"></button>
                    </div>`;
                        $("#comment_list").append(tempHtml);
                    }
                },
            });
        }

        // 댓글 삭제하기
        function delete_comment(comment_Delete_Id, nickname) {
            token = localStorage.getItem("token");
            if (token == null) {
                alert("로그인이 필요한 기능입니다!");
                return;
            }

            let prompt_test = prompt("진짜 수정하실거면 '삭제'를 입력해주세요!");
            if (prompt_test == "삭제") {
                $.ajax({
                    type: "POST",
                    url: `/api/delete_comment/${blogsId}`,
                    data: {
                        comment_Delete_Id: comment_Delete_Id,
                        nickname_check: nickname,
                        token: localStorage.getItem("token"),
                    },
                    success: function (response) {
                        if (response == "O") {
                            alert("삭제 완료!");
                        } else {
                            alert("본인 댓글만 삭제 가능합니다.");
                        }
                    },
                });
                window.location.reload();
            } else {
                alert("다시 생각해보세용!");
            }
        }

        // 댓글 수정하기
        function fix_comments(comment_Delete_Id, nickname) {

            token = localStorage.getItem("token");
            if (token == null) {
                alert("로그인이 필요한 기능입니다!");
                return;
            }

            $.ajax({
                type: "POST",
                url: `/api/show_fix_comments`,
                data: {
                    "nickname_check": nickname,
                    "comment_Delete_Id": comment_Delete_Id,
                    "token": localStorage.getItem("token"),
                },
                success: function (response) {

                    if (response == "X") {
                        alert("본인의 댓글만 수정 가능합니다!")
                    } else {
                        let commentDetail = response["comment_fix_receive"];
                        let fix_comment = commentDetail["comment"]
                        let reviewsBox = document.getElementById(comment_Delete_Id);
                        let tempHtml = `
            <button type="button" class="btn btn-warning" onclick="save_fix_comments('${comment_Delete_Id}', '${nickname}')" style=" font-family: 'Stylish', sans-serif;">저장</button>
            <button type="button" class="btn btn-danger" onclick="window.location.reload()" style=" font-family: 'Stylish', sans-serif;">취소</button>
                 <input value="${fix_comment}" id='${comment_Delete_Id}_save' type="text" class="form-control" aria-label="Sizing example input" aria-describedby="inputGroup-sizing-lg">
            `;
                        $(reviewsBox).append(tempHtml);
                        document.getElementById(comment_Delete_Id + "_bts").style.display = "none";
                    }
                }
            });
        }

        // 댓글 수정한 것 저장
        function save_fix_comments(comment_Delete_Id, nickname) {
            let temp = document.getElementById(comment_Delete_Id + "_save")
            let fix_comment = $(temp).val()

            if (fix_comment == "") {
                alert("댓글 내용을 입력해주세요!")
                return
            }

            $.ajax({
                type: "POST",
                url: `/api/save_fix_comments`,
                data: {
                    "comment_Delete_Id": comment_Delete_Id,
                    "nickname_check": nickname,
                    "comment": fix_comment,
                    "token": localStorage.getItem("token"),
                },
                success: function (response) {
                    if (response == "X") {
                        alert("본인이 작성한 댓글만 수정할 수 있습니다!")
                    } else {
                        alert("수정 완료!")
                    }
                },
            });
            window.location.reload();
        }

    </script>
</body>

</html>